{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.constants.ts","webpack:///src/app/app.module.ts","webpack:///src/app/services/content.service.ts","webpack:///src/app/services/data.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","dataService","toastrService","options","floor","ceil","disabled","loading","showWebcam","allowCameraSwitch","multipleWebcamsAvailable","videoOptions","predictionData","errors","webcamImage","trigger","nextWebcam","getAvailableVideoInputs","mediaDevices","length","next","error","push","directionOrDeviceId","selectedFile","imageAsDataUrl","deviceId","data","img_link","getPrediction","subscribe","event","file","target","files","pattern","reader","FileReader","type","match","alert","onload","_handleReaderLoaded","bind","readAsDataURL","result","console","log","asObservable","selector","templateUrl","styleUrls","AppConstants","baseURL","toConvert","formBody","property","encodedKey","encodeURIComponent","encodedValue","join","str","RegExp","test","css","$","document","find","remove","head","getElementsByTagName","style","createElement","appendChild","createTextNode","js","script","t","innerHTML","AppModule","forRoot","declarations","imports","providers","bootstrap","httpOptions","ContentService","http","appConstants","url","get","post","providedIn","DataService","contentService","postData","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component, OnInit} from '@angular/core';\nimport {Subject, Observable} from 'rxjs';\nimport {WebcamImage, WebcamInitError, WebcamUtil} from 'ngx-webcam';\nimport { DataService } from './services/data.service';\nimport { Options } from 'ng5-slider';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  options: Options = {\n    floor: 0,\n    ceil: 100,\n    disabled: true\n  };\n  // toggle webcam on/off\n  public loading = false;\n  public showWebcam = true;\n  public allowCameraSwitch = true;\n  public multipleWebcamsAvailable = false;\n  public deviceId: string;\n  public videoOptions: MediaTrackConstraints = {\n    // width: {ideal: 1024},\n    // height: {ideal: 576}\n  };\n  predictionData = {};\n  public errors: WebcamInitError[] = [];\n\n  // latest snapshot\n  public webcamImage: WebcamImage = null;\n\n  // webcam snapshot trigger\n  private trigger: Subject<void> = new Subject<void>();\n  // switch to next / previous / specific webcam; true/false: forward/backwards, string: deviceId\n  private nextWebcam: Subject<boolean|string> = new Subject<boolean|string>();\n  public selectedFile;\n\n  constructor(\n    private dataService: DataService,\n    public toastrService: ToastrService\n\t) {\n  }\n\n  public ngOnInit(): void {\n    WebcamUtil.getAvailableVideoInputs()\n      .then((mediaDevices: MediaDeviceInfo[]) => {\n        this.multipleWebcamsAvailable = mediaDevices && mediaDevices.length > 1;\n      });\n  }\n\n  public triggerSnapshot(): void {\n    this.trigger.next();\n  }\n\n  public toggleWebcam(): void {\n    this.showWebcam = !this.showWebcam;\n  }\n\n  public handleInitError(error: WebcamInitError): void {\n    this.errors.push(error);\n  }\n\n  public showNextWebcam(directionOrDeviceId: boolean|string): void {\n    // true => move forward through devices\n    // false => move backwards through devices\n    // string => move to device with given deviceId\n    this.nextWebcam.next(directionOrDeviceId);\n  }\n\n  public handleImage(webcamImage: WebcamImage): void {\n    this.webcamImage = webcamImage;\n    this.selectedFile = webcamImage.imageAsDataUrl;\n  }\n\n  public cameraWasSwitched(deviceId: string): void {\n    this.deviceId = deviceId;\n  }\n\n  public get triggerObservable(): Observable<void> {\n    return this.trigger.asObservable();\n  }\n\n  public get nextWebcamObservable(): Observable<boolean|string> {\n    return this.nextWebcam.asObservable();\n  }\n\n  public resetShot() {\n    this.webcamImage = null;\n    this.selectedFile = null;\n    this.predictionData = {};\n  }\n  public getPrediction() {\n    let data = {\n      img_link : this.selectedFile\n    }\n    this.loading = true;\n    this.dataService.getPrediction(data).subscribe(data => {\n      this.predictionData = data;\n    }, error => {\n      this.predictionData = {}\n      this.loading = false;\n      this.toastrService.error('Unable to process your request, Please try again.');\n    },\n    () => {\n      this.loading = false;\n      // 'onCompleted' callback.\n      // No errors, route to new page here\n    });\n  }\n\n  onFileChanged(event) {\n    let file = event.target.files[0]\n    let pattern = /image-*/;\n    let reader = new FileReader();\n    if (!file.type.match(pattern)) {\n      alert('invalid format');\n      return;\n    }\n    reader.onload = this._handleReaderLoaded.bind(this);\n    reader.readAsDataURL(file);\n  }\n  _handleReaderLoaded(e) {\n    let reader = e.target;\n    this.selectedFile = reader.result;\n    console.log(this.selectedFile)\n  }\n\n}\n","<div class=\"text-center\">\n  <h1>\n    Face Emotion\n  </h1>\n\n  <div class=\"col-sm-6 float-left\" *ngIf=\"!webcamImage && !selectedFile\">\n      <webcam [height]=\"500\" [width]=\"640\" [trigger]=\"triggerObservable\" (imageCapture)=\"handleImage($event)\" *ngIf=\"showWebcam\"\n              [allowCameraSwitch]=\"allowCameraSwitch\" [switchCamera]=\"nextWebcamObservable\"\n              [videoOptions]=\"videoOptions\"\n              [imageQuality]=\"1\"\n              (cameraSwitched)=\"cameraWasSwitched($event)\"\n              (initError)=\"handleInitError($event)\"\n      ></webcam>\n      <br/>\n      <button class=\"actionBtn\" (click)=\"triggerSnapshot();\">Take A Snapshot</button>\n\n      <input style=\"display: none\" type=\"file\" (change)=\"onFileChanged($event)\" #fileInput>\n      <button class=\"actionBtn ml-2\" (click)=\"fileInput.click()\">Select File</button>\n\n    <!-- <button class=\"actionBtn\" (click)=\"toggleWebcam();\">Toggle Webcam</button> -->\n    <!-- <br/> -->\n    <!-- <button class=\"actionBtn\" (click)=\"showNextWebcam(true);\" [disabled]=\"!multipleWebcamsAvailable\">Next Webcam</button> -->\n    <!-- <input id=\"cameraSwitchCheckbox\" type=\"checkbox\" [(ngModel)]=\"allowCameraSwitch\"><label for=\"cameraSwitchCheckbox\">Allow Camera Switch</label>\n    <br/>\n    DeviceId: <input id=\"deviceId\" type=\"text\" [(ngModel)]=\"deviceId\" style=\"width: 500px\">\n    <button (click)=\"showNextWebcam(deviceId);\">Activate</button> -->\n  </div>\n  <div class=\"snapshot col-sm-6 float-left\" *ngIf=\"selectedFile\">\n    <img [src]=\"selectedFile\" style=\"min-width: 640px\"/>\n    <br>\n    <button class=\"actionBtn\" (click)=\"resetShot();\">Re-Take</button>\n    <button class=\"actionBtn ml-2\" (click)=\"getPrediction();\">Prediction</button>\n  </div>\n\n  <div class=\"d-flex justify-content-center col-sm-4 float-left\" *ngIf=\"selectedFile\">\n    <div class=\"w-75\" *ngIf=\"(predictionData | json) != '{}' && !loading\">\n      <h4>\n        Prediction\n      </h4>\n      <div class=\"w-100 float-left\" *ngFor=\"let item of predictionData | keyvalue\">\n        <div class=\"float-left col-sm-3\">\n          <span>\n            {{item.key | titlecase}}\n          </span>\n          <span class=\"mood {{item.key}}\"></span>\n        </div>\n        <div class=\"float-left col-sm-9\">\n            <ng5-slider class=\"custom-slider\" [(value)]=\"item.value\" [options]=\"options\"></ng5-slider>\n          <!-- <span class=\"font-weight-bold purple-text mr-2 mt-1\">0</span>\n          <input class=\"border-0\" type=\"range\" min=\"0\" max=\"100\" class=\"w-75\" [value]=\"item.value\" [disabled]=\"true\" />\n          <span class=\"font-weight-bold purple-text ml-2 mt-1\">100</span> -->\n        </div>\n      </div>\n    </div>\n    <div class=\"spinner-border\" role=\"status\"*ngIf=\"loading\">\n      <span class=\"sr-only\">Loading...</span>\n    </div>      \n  </div>\n\n\n","import { Injectable } from '@angular/core'\ndeclare var $: any\n@Injectable()\nexport class AppConstants {\n\tbaseURL: string = 'http://127.0.0.1:5000/';\n  \tconstructor() {}\n    getFormUrlEncoded(toConvert) {\n\t\tconst formBody = []\n\t\tfor (const property in toConvert) {\n\t\t\tconst encodedKey = encodeURIComponent(property)\n\t\t\tconst encodedValue = encodeURIComponent(toConvert[property])\n\t\t\tformBody.push(encodedKey + '=' + encodedValue)\n\t\t}\n\t\treturn formBody.join('&')\n    }\n    \n    isValidURL(str) {\n      var pattern = new RegExp('^(https?:\\\\/\\\\/)?'+ // protocol\n        '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|'+ // domain name\n        '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))'+ // OR ip (v4) address\n        '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*'+ // port and path\n        '(\\\\?[;&a-z\\\\d%_.~+=-]*)?'+ // query string\n        '(\\\\#[-a-z\\\\d_]*)?$','i'); // fragment locator\n      return !!pattern.test(str);\n\t}\n\n\taddStyletoDoc(css) {\n\t\t$(document).find('#page-style').remove()\n\t\tlet head = document.getElementsByTagName('head')[0];\n\t\tlet style = document.createElement('style');\n\t\tstyle.type = 'text/css';\n\t\tstyle.id = 'page-style'\n\t\tstyle.appendChild(document.createTextNode(css));\n\t\thead.appendChild(style);\n\t}\n\taddScriptoDoc(js) {\n\t\t$(document).find('#page-script').remove()\n\t\tlet head = document.getElementsByTagName('head')[0];\n\t\tlet script = document.createElement('script');\n\t\tscript.type = 'text/javascript';\n\t\tscript.id = 'page-script'\n\t\tscript.appendChild(document.createTextNode(js));\n\t\thead.appendChild(script);\n\t}\n\tsetPageTitle(t) {\n\t\tdocument.getElementsByTagName('title')[0].innerHTML = t;\n\t}\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {AppComponent} from './app.component';\nimport {FormsModule} from '@angular/forms';\nimport {WebcamModule} from 'ngx-webcam';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { DataService } from './services/data.service';\nimport { ContentService } from './services/content.service';\nimport { AppConstants } from './app.constants';\nimport { Ng5SliderModule } from 'ng5-slider';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'; \nimport { ToastrModule } from 'ngx-toastr';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    WebcamModule,\n    HttpClientModule,\n    Ng5SliderModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot()\n  ],\n  providers: [\n    HttpClient,\n    AppConstants,\n    ContentService,\n    DataService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Injectable } from '@angular/core'\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { AppConstants } from '../app.constants';\nconst httpOptions: Object = new HttpHeaders({\n    'Content-Type': 'application/json; charset = UTF-8',\n    'Upgrade-Insecure-Requests': '1',\n    'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS'\n});\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ContentService {\n    baseURL: string\n    d : any\n    constructor(\n        private http: HttpClient,\n        public appConstants: AppConstants\n    ) {\n        this.baseURL = this.appConstants.baseURL\n    }\n    getData(url: any) {\n        return this.http.get(url, httpOptions);\n    }\n    postData(url: any, data?: any) {\n        return this.http.post(url, data, httpOptions);\n    }\n}","import { Injectable } from '@angular/core'\nimport { ContentService } from './content.service'\n@Injectable({\n  providedIn: 'root'\n})\n\n@Injectable()\nexport class DataService {\n    baseURL: string\n    constructor(private contentService: ContentService) {\n        this.baseURL = this.contentService.baseURL\n    }\n    getPrediction(data) {\n        return this.contentService.postData(this.baseURL+'getprediction', data);\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}