{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.constants.ts","./src/app/app.module.ts","./src/app/services/content.service.ts","./src/app/services/data.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component, OnInit} from '@angular/core';\nimport {Subject, Observable} from 'rxjs';\nimport {WebcamImage, WebcamInitError, WebcamUtil} from 'ngx-webcam';\nimport { DataService } from './services/data.service';\nimport { Options } from 'ng5-slider';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  options: Options = {\n    floor: 0,\n    ceil: 100,\n    disabled: true\n  };\n  // toggle webcam on/off\n  public loading = false;\n  public showWebcam = true;\n  public allowCameraSwitch = true;\n  public multipleWebcamsAvailable = false;\n  public deviceId: string;\n  public videoOptions: MediaTrackConstraints = {\n    // width: {ideal: 1024},\n    // height: {ideal: 576}\n  };\n  predictionData = {};\n  public errors: WebcamInitError[] = [];\n\n  // latest snapshot\n  public webcamImage: WebcamImage = null;\n\n  // webcam snapshot trigger\n  private trigger: Subject<void> = new Subject<void>();\n  // switch to next / previous / specific webcam; true/false: forward/backwards, string: deviceId\n  private nextWebcam: Subject<boolean|string> = new Subject<boolean|string>();\n  public selectedFile;\n\n  constructor(\n    private dataService: DataService,\n    public toastrService: ToastrService\n\t) {\n  }\n\n  public ngOnInit(): void {\n    WebcamUtil.getAvailableVideoInputs()\n      .then((mediaDevices: MediaDeviceInfo[]) => {\n        this.multipleWebcamsAvailable = mediaDevices && mediaDevices.length > 1;\n      });\n  }\n\n  public triggerSnapshot(): void {\n    this.trigger.next();\n  }\n\n  public toggleWebcam(): void {\n    this.showWebcam = !this.showWebcam;\n  }\n\n  public handleInitError(error: WebcamInitError): void {\n    this.errors.push(error);\n  }\n\n  public showNextWebcam(directionOrDeviceId: boolean|string): void {\n    // true => move forward through devices\n    // false => move backwards through devices\n    // string => move to device with given deviceId\n    this.nextWebcam.next(directionOrDeviceId);\n  }\n\n  public handleImage(webcamImage: WebcamImage): void {\n    this.webcamImage = webcamImage;\n    this.selectedFile = webcamImage.imageAsDataUrl;\n  }\n\n  public cameraWasSwitched(deviceId: string): void {\n    this.deviceId = deviceId;\n  }\n\n  public get triggerObservable(): Observable<void> {\n    return this.trigger.asObservable();\n  }\n\n  public get nextWebcamObservable(): Observable<boolean|string> {\n    return this.nextWebcam.asObservable();\n  }\n\n  public resetShot() {\n    this.webcamImage = null;\n    this.selectedFile = null;\n    this.predictionData = {};\n  }\n  public getPrediction() {\n    let data = {\n      img_link : this.selectedFile\n    }\n    this.loading = true;\n    this.dataService.getPrediction(data).subscribe(data => {\n      this.predictionData = data;\n    }, error => {\n      this.predictionData = {}\n      this.loading = false;\n      this.toastrService.error('Unable to process your request, Please try again.');\n    },\n    () => {\n      this.loading = false;\n      // 'onCompleted' callback.\n      // No errors, route to new page here\n    });\n  }\n\n  onFileChanged(event) {\n    let file = event.target.files[0]\n    let pattern = /image-*/;\n    let reader = new FileReader();\n    if (!file.type.match(pattern)) {\n      alert('invalid format');\n      return;\n    }\n    reader.onload = this._handleReaderLoaded.bind(this);\n    reader.readAsDataURL(file);\n  }\n  _handleReaderLoaded(e) {\n    let reader = e.target;\n    this.selectedFile = reader.result;\n    console.log(this.selectedFile)\n  }\n\n}\n","<div class=\"text-center\">\n  <h1>\n    Face Emotion\n  </h1>\n\n  <div class=\"col-sm-6 float-left\" *ngIf=\"!webcamImage && !selectedFile\">\n      <webcam [height]=\"500\" [width]=\"640\" [trigger]=\"triggerObservable\" (imageCapture)=\"handleImage($event)\" *ngIf=\"showWebcam\"\n              [allowCameraSwitch]=\"allowCameraSwitch\" [switchCamera]=\"nextWebcamObservable\"\n              [videoOptions]=\"videoOptions\"\n              [imageQuality]=\"1\"\n              (cameraSwitched)=\"cameraWasSwitched($event)\"\n              (initError)=\"handleInitError($event)\"\n      ></webcam>\n      <br/>\n      <button class=\"actionBtn\" (click)=\"triggerSnapshot();\">Take A Snapshot</button>\n\n      <input style=\"display: none\" type=\"file\" (change)=\"onFileChanged($event)\" #fileInput>\n      <button class=\"actionBtn ml-2\" (click)=\"fileInput.click()\">Select File</button>\n\n    <!-- <button class=\"actionBtn\" (click)=\"toggleWebcam();\">Toggle Webcam</button> -->\n    <!-- <br/> -->\n    <!-- <button class=\"actionBtn\" (click)=\"showNextWebcam(true);\" [disabled]=\"!multipleWebcamsAvailable\">Next Webcam</button> -->\n    <!-- <input id=\"cameraSwitchCheckbox\" type=\"checkbox\" [(ngModel)]=\"allowCameraSwitch\"><label for=\"cameraSwitchCheckbox\">Allow Camera Switch</label>\n    <br/>\n    DeviceId: <input id=\"deviceId\" type=\"text\" [(ngModel)]=\"deviceId\" style=\"width: 500px\">\n    <button (click)=\"showNextWebcam(deviceId);\">Activate</button> -->\n  </div>\n  <div class=\"snapshot col-sm-6 float-left\" *ngIf=\"selectedFile\">\n    <img [src]=\"selectedFile\" style=\"min-width: 640px\"/>\n    <br>\n    <button class=\"actionBtn\" (click)=\"resetShot();\">Re-Take</button>\n    <button class=\"actionBtn ml-2\" (click)=\"getPrediction();\">Prediction</button>\n  </div>\n\n  <div class=\"d-flex justify-content-center col-sm-4 float-left\" *ngIf=\"selectedFile\">\n    <div class=\"w-75\" *ngIf=\"(predictionData | json) != '{}' && !loading\">\n      <h4>\n        Prediction\n      </h4>\n      <div class=\"w-100 float-left\" *ngFor=\"let item of predictionData | keyvalue\">\n        <div class=\"float-left col-sm-3\">\n          <span>\n            {{item.key | titlecase}}\n          </span>\n          <span class=\"mood {{item.key}}\"></span>\n        </div>\n        <div class=\"float-left col-sm-9\">\n            <ng5-slider class=\"custom-slider\" [(value)]=\"item.value\" [options]=\"options\"></ng5-slider>\n          <!-- <span class=\"font-weight-bold purple-text mr-2 mt-1\">0</span>\n          <input class=\"border-0\" type=\"range\" min=\"0\" max=\"100\" class=\"w-75\" [value]=\"item.value\" [disabled]=\"true\" />\n          <span class=\"font-weight-bold purple-text ml-2 mt-1\">100</span> -->\n        </div>\n      </div>\n    </div>\n    <div class=\"spinner-border\" role=\"status\"*ngIf=\"loading\">\n      <span class=\"sr-only\">Loading...</span>\n    </div>      \n  </div>\n\n\n","import { Injectable } from '@angular/core'\ndeclare var $: any\n@Injectable()\nexport class AppConstants {\n\tbaseURL: string = 'http://127.0.0.1:5000/';\n  \tconstructor() {}\n    getFormUrlEncoded(toConvert) {\n\t\tconst formBody = []\n\t\tfor (const property in toConvert) {\n\t\t\tconst encodedKey = encodeURIComponent(property)\n\t\t\tconst encodedValue = encodeURIComponent(toConvert[property])\n\t\t\tformBody.push(encodedKey + '=' + encodedValue)\n\t\t}\n\t\treturn formBody.join('&')\n    }\n    \n    isValidURL(str) {\n      var pattern = new RegExp('^(https?:\\\\/\\\\/)?'+ // protocol\n        '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|'+ // domain name\n        '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))'+ // OR ip (v4) address\n        '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*'+ // port and path\n        '(\\\\?[;&a-z\\\\d%_.~+=-]*)?'+ // query string\n        '(\\\\#[-a-z\\\\d_]*)?$','i'); // fragment locator\n      return !!pattern.test(str);\n\t}\n\n\taddStyletoDoc(css) {\n\t\t$(document).find('#page-style').remove()\n\t\tlet head = document.getElementsByTagName('head')[0];\n\t\tlet style = document.createElement('style');\n\t\tstyle.type = 'text/css';\n\t\tstyle.id = 'page-style'\n\t\tstyle.appendChild(document.createTextNode(css));\n\t\thead.appendChild(style);\n\t}\n\taddScriptoDoc(js) {\n\t\t$(document).find('#page-script').remove()\n\t\tlet head = document.getElementsByTagName('head')[0];\n\t\tlet script = document.createElement('script');\n\t\tscript.type = 'text/javascript';\n\t\tscript.id = 'page-script'\n\t\tscript.appendChild(document.createTextNode(js));\n\t\thead.appendChild(script);\n\t}\n\tsetPageTitle(t) {\n\t\tdocument.getElementsByTagName('title')[0].innerHTML = t;\n\t}\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {AppComponent} from './app.component';\nimport {FormsModule} from '@angular/forms';\nimport {WebcamModule} from 'ngx-webcam';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { DataService } from './services/data.service';\nimport { ContentService } from './services/content.service';\nimport { AppConstants } from './app.constants';\nimport { Ng5SliderModule } from 'ng5-slider';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'; \nimport { ToastrModule } from 'ngx-toastr';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    WebcamModule,\n    HttpClientModule,\n    Ng5SliderModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot()\n  ],\n  providers: [\n    HttpClient,\n    AppConstants,\n    ContentService,\n    DataService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Injectable } from '@angular/core'\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { AppConstants } from '../app.constants';\nconst httpOptions: Object = new HttpHeaders({\n    'Content-Type': 'application/json; charset = UTF-8',\n    'Upgrade-Insecure-Requests': '1',\n    'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS'\n});\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ContentService {\n    baseURL: string\n    d : any\n    constructor(\n        private http: HttpClient,\n        public appConstants: AppConstants\n    ) {\n        this.baseURL = this.appConstants.baseURL\n    }\n    getData(url: any) {\n        return this.http.get(url, httpOptions);\n    }\n    postData(url: any, data?: any) {\n        return this.http.post(url, data, httpOptions);\n    }\n}","import { Injectable } from '@angular/core'\nimport { ContentService } from './content.service'\n@Injectable({\n  providedIn: 'root'\n})\n\n@Injectable()\nexport class DataService {\n    baseURL: string\n    constructor(private contentService: ContentService) {\n        this.baseURL = this.contentService.baseURL\n    }\n    getPrediction(data) {\n        return this.contentService.postData(this.baseURL+'getprediction', data);\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}